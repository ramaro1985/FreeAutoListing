<?php

namespace Proxies\__CG__\Frontend\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class KitchenAmenities extends \Frontend\AppBundle\Entity\KitchenAmenities implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'blender', 'coffeMaker', 'freezer', 'garbageDisposal', 'kitchenUtensils', 'potsPans', 'toaster', 'oven', 'dishwasher', 'stove', 'microwave', 'grill');
        }

        return array('__isInitialized__', 'id', 'blender', 'coffeMaker', 'freezer', 'garbageDisposal', 'kitchenUtensils', 'potsPans', 'toaster', 'oven', 'dishwasher', 'stove', 'microwave', 'grill');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (KitchenAmenities $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlender($blender)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlender', array($blender));

        return parent::setBlender($blender);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlender', array());

        return parent::getBlender();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoffeMaker($coffeMaker)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoffeMaker', array($coffeMaker));

        return parent::setCoffeMaker($coffeMaker);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoffeMaker()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoffeMaker', array());

        return parent::getCoffeMaker();
    }

    /**
     * {@inheritDoc}
     */
    public function setFreezer($freezer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFreezer', array($freezer));

        return parent::setFreezer($freezer);
    }

    /**
     * {@inheritDoc}
     */
    public function getFreezer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFreezer', array());

        return parent::getFreezer();
    }

    /**
     * {@inheritDoc}
     */
    public function setGarbageDisposal($garbageDisposal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGarbageDisposal', array($garbageDisposal));

        return parent::setGarbageDisposal($garbageDisposal);
    }

    /**
     * {@inheritDoc}
     */
    public function getGarbageDisposal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGarbageDisposal', array());

        return parent::getGarbageDisposal();
    }

    /**
     * {@inheritDoc}
     */
    public function setKitchenUtensils($kitchenUtensils)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKitchenUtensils', array($kitchenUtensils));

        return parent::setKitchenUtensils($kitchenUtensils);
    }

    /**
     * {@inheritDoc}
     */
    public function getKitchenUtensils()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKitchenUtensils', array());

        return parent::getKitchenUtensils();
    }

    /**
     * {@inheritDoc}
     */
    public function setPotsPans($potsPans)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPotsPans', array($potsPans));

        return parent::setPotsPans($potsPans);
    }

    /**
     * {@inheritDoc}
     */
    public function getPotsPans()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPotsPans', array());

        return parent::getPotsPans();
    }

    /**
     * {@inheritDoc}
     */
    public function setToaster($toaster)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToaster', array($toaster));

        return parent::setToaster($toaster);
    }

    /**
     * {@inheritDoc}
     */
    public function getToaster()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToaster', array());

        return parent::getToaster();
    }

    /**
     * {@inheritDoc}
     */
    public function setOven($oven)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOven', array($oven));

        return parent::setOven($oven);
    }

    /**
     * {@inheritDoc}
     */
    public function getOven()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOven', array());

        return parent::getOven();
    }

    /**
     * {@inheritDoc}
     */
    public function setDishwasher($dishwasher)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDishwasher', array($dishwasher));

        return parent::setDishwasher($dishwasher);
    }

    /**
     * {@inheritDoc}
     */
    public function getDishwasher()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDishwasher', array());

        return parent::getDishwasher();
    }

    /**
     * {@inheritDoc}
     */
    public function setStove($stove)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStove', array($stove));

        return parent::setStove($stove);
    }

    /**
     * {@inheritDoc}
     */
    public function getStove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStove', array());

        return parent::getStove();
    }

    /**
     * {@inheritDoc}
     */
    public function setMicrowave($microwave)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMicrowave', array($microwave));

        return parent::setMicrowave($microwave);
    }

    /**
     * {@inheritDoc}
     */
    public function getMicrowave()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMicrowave', array());

        return parent::getMicrowave();
    }

    /**
     * {@inheritDoc}
     */
    public function setGrill($grill)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGrill', array($grill));

        return parent::setGrill($grill);
    }

    /**
     * {@inheritDoc}
     */
    public function getGrill()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGrill', array());

        return parent::getGrill();
    }

}
