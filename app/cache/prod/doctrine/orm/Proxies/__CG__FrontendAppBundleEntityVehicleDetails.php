<?php

namespace Proxies\__CG__\Frontend\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class VehicleDetails extends \Frontend\AppBundle\Entity\VehicleDetails implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'trim', 'doors', 'enginetype', 'transmission', 'fueltype', 'drive', 'exteriorcolor', 'interiorcolor');
        }

        return array('__isInitialized__', 'id', 'trim', 'doors', 'enginetype', 'transmission', 'fueltype', 'drive', 'exteriorcolor', 'interiorcolor');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (VehicleDetails $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEnginetype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnginetype', array());

        return parent::getEnginetype();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnginetype($enginetype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnginetype', array($enginetype));

        return parent::setEnginetype($enginetype);
    }

    /**
     * {@inheritDoc}
     */
    public function getFueltype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFueltype', array());

        return parent::getFueltype();
    }

    /**
     * {@inheritDoc}
     */
    public function setFueltype($fueltype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFueltype', array($fueltype));

        return parent::setFueltype($fueltype);
    }

    /**
     * {@inheritDoc}
     */
    public function getDoors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDoors', array());

        return parent::getDoors();
    }

    /**
     * {@inheritDoc}
     */
    public function setDoors($doors)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDoors', array($doors));

        return parent::setDoors($doors);
    }

    /**
     * {@inheritDoc}
     */
    public function getDrive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDrive', array());

        return parent::getDrive();
    }

    /**
     * {@inheritDoc}
     */
    public function setDrive($drive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDrive', array($drive));

        return parent::setDrive($drive);
    }

    /**
     * {@inheritDoc}
     */
    public function getExteriorcolor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExteriorcolor', array());

        return parent::getExteriorcolor();
    }

    /**
     * {@inheritDoc}
     */
    public function setExteriorcolor($exteriorcolor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExteriorcolor', array($exteriorcolor));

        return parent::setExteriorcolor($exteriorcolor);
    }

    /**
     * {@inheritDoc}
     */
    public function getInteriorcolor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInteriorcolor', array());

        return parent::getInteriorcolor();
    }

    /**
     * {@inheritDoc}
     */
    public function setInteriorcolor($interiorcolor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInteriorcolor', array($interiorcolor));

        return parent::setInteriorcolor($interiorcolor);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransmission()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransmission', array());

        return parent::getTransmission();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransmission($transmission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransmission', array($transmission));

        return parent::setTransmission($transmission);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrim()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrim', array());

        return parent::getTrim();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrim($trim)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrim', array($trim));

        return parent::setTrim($trim);
    }

}
