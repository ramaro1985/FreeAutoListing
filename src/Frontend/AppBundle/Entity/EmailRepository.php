<?php

namespace Frontend\AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use \DateTime;

/**
 * EmailRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmailRepository extends EntityRepository
{
    /**
     * @param $profiles
     * @return ArrayCollection
     */
    public function findByProfiles($profiles,$offer){

        $qb = $this->createQueryBuilder('e');
        $qb->select('e');
        $qb->join('e.profile', 'p');

        $aux = 1;
        foreach($profiles as $p ){
            $qb->orWhere('p.id = :current_'.$aux);
            $qb->setParameter('current_'.$aux, $p->getId());
            $aux++;
        }
        if($offer !='all'){
            $offer  = ($offer == "offer") ? 1 : 0;
            $qb->andWhere('e.offer = :offer');
            $qb->setParameter('offer', $offer);
        }


        $qb->orderBy('e.dateCreated', 'DESC');
        $query = $qb->getQuery();

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }

    }
    public function findByVehicles($vehicles){

        $qb = $this->createQueryBuilder('e');
        $qb->select('e');
        $qb->join('e.vehicle', 'p');

        $aux = 1;
        foreach($vehicles as $p ){
            $qb->orWhere('p.id = :current_'.$aux);
            $qb->setParameter('current_'.$aux, $p->getId());
            $aux++;
        }

        $qb->orderBy('e.dateCreated', 'DESC');
        $query = $qb->getQuery();

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }

    }


}
