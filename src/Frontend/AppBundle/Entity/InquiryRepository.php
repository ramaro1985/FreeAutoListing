<?php

namespace Frontend\AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use \DateTime;

/**
 * PropertyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InquiryRepository extends EntityRepository
{
     public function getLastWeekInquiriesByProperty($property){
        
        $now = new DateTime();
        $sevenDaysAgo = $now->sub(new \DateInterval("P7D"));    
        
        $qb = $this->createQueryBuilder('i');
        $qb->select('i, p');
        $qb->join('i.property', 'p');
        $qb->andWhere('p.id = :id');
        $qb->andWhere('i.dateCreated BETWEEN :from AND :to');
        $qb->andWhere('i.viewed = 0');
        $qb->setParameter('id', $property);
        $qb->setParameter('from', $sevenDaysAgo);
        $qb->setParameter('to', new DateTime());
        $query = $qb->getQuery();
       
       
        
        
        try {
        return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
        return null;
        }
        
        }
        
         public function getLastInquiriesByUser($user, $cant, $status){
        
        $qb = $this->createQueryBuilder('i');
        $qb->select('i, u, p, s');
        $qb->join('i.property', 'p');
        $qb->join('p.user', 'u');
        $qb->join('p.status', 's');
        $qb->andWhere('p.user = :user');
        $qb->andWhere('s.id = :status');
        $qb->setMaxResults($cant);
        $qb->orderBy('i.dateCreated','DESC');
        $qb->setParameter('user', $user);
        $qb->setParameter('status', $status);
        $query = $qb->getQuery();
       
       
        
        
        try {
        return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
        return null;
        }
        
        }
        
        
        public function filterSuperAdminInquiries($filtro){
        
            
            
        $status = $filtro['status'];
        $searchtext = $filtro['searchtext'];
        
        $actual = new DateTime();
        $now = date_format($actual, 'Y-m-d');        
        
        $qb = $this->createQueryBuilder('i');
        $qb->select('i,  p');
        $qb->join('i.property', 'p');
        
        if(isset($searchtext) && $searchtext != ''){
        $qb->andWhere('p.serie = :searchtext OR i.email = :searchtext');
        $qb->setParameter('searchtext', $searchtext);
        }
     
        $qb->orderBy('i.dateCreated','DESC');
        $query = $qb->getQuery();
       
        try {
        return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
        return null;
        }
        
        }
    
    
}
